{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "test describe": {
    "prefix": "describe",
    "body": ["describe(\"$1\", () => {", "\t$0", "});"],
    "scope": "typescript,typescriptreact,javascript"
  },
  "test test": {
    "prefix": "test",
    "body": ["test(\"$1\", () => {", "\t$0", "});"],
    "scope": "typescript,typescriptreact,javascript"
  },
  "test it": {
    "prefix": "it",
    "body": ["it(\"$1\", () => {", "\t$0", "});"],
    "scope": "typescript,typescriptreact"
  },
  "test it.each": {
    "prefix": "it.each",
    "body": [
      "it.each([",
      "\t$1",
      "])(\"${2:%s の時}\", ($3) => {",
      "\t$0",
      "});"
    ],
    "scope": "typescript,typescriptreact"
  },
  "dumper": {
    "prefix": "dumper",
    "body": ["console.log(JSON.stringify($0, undefined, 2));"],
    "scope": "typescript,typescriptreact"
  }
}
