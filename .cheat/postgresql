# 日間の集計
SELECT DATE(date_column) as date, COUNT(*) as count FROM table_name GROUP BY date;

# 月間の集計
SELECT date_trunc('month', created_at) as "month", COUNT(*) as count FROM users GROUP BY month order by month;

\l # SHOW DATABASES
\c dbname # USE dbname
\dt # SHOW TABLES

# クエリ実行時間を表示する
\timing

# 実行計画と時間を知る
BEGIN; EXPLAIN ANALYZE ...; ROLLBACK;

# 実行中のクエリ一覧
SELECT * FROM pg_stat_activity where state != 'idle' order by query_start asc;

# activeで1分以上待っているクエリを探す
SELECT pid,client_addr, query_start, query FROM pg_stat_activity WHERE state = 'active' AND query_start < ( current_timestamp - interval '1' minute ) AND pid <> pg_backend_pid() ORDER BY query_start;

# 指定したpidのクエリを殺す
SELECT pg_terminate_backend(<pid>);

# ロック状況を見る
SELECT locktype, pg_locks.pid, mode, relation::regclass, usename, application_name, client_addr, query_start, state_change, granted, state, query FROM pg_locks INNER JOIN pg_stat_activity ON pg_locks.pid = pg_stat_activity.pid WHERE pg_locks.pid <> pg_backend_pid();

# ロック待ちで待機しているクエリを見る
SELECT locktype, pg_locks.pid, mode, relation::regclass, usename, application_name, client_addr, query_start, state_change, granted, state, query FROM pg_locks INNER JOIN pg_stat_activity ON pg_locks.pid = pg_stat_activity.pid WHERE granted = false AND pg_locks.pid <> pg_backend_pid();

# master/slave確認。マスタとして動作していた場合はfalseが変えるし、slaveの時はtrue。レプリが切れていたら両方false
SELECT pg_is_in_recovery();

# レプリケーションが出来ているか。レプリケーションが出来ていないと空が返る。
SELECT * FROM pg_stat_replication;

# タブ区切りで出力する
psql database_name -h ... -A -F $'\t' -c "SQL" > result.tsv

# テーブルサイズの大きい順に、テーブル名・行数・占有サイズ(Mbyte)・平均サイズ(byte)を表示する
SELECT relname, reltuples, (relpages / 128) as mbytes, (relpages * 8192.0 / (reltuples + 1e-10)) as average_row_size FROM pg_class ORDER BY mbytes DESC;

# テーブルのサイズや行数などを色んな情報込みで眺める
SELECT pgn.nspname, relname, pg_size_pretty(relpages::bigint * 8 * 1024) AS size, CASE WHEN relkind = 't' THEN (SELECT pgd.relname FROM pg_class pgd WHERE pgd.reltoastrelid = pg.oid) WHEN nspname = 'pg_toast' AND relkind = 'i' THEN (SELECT pgt.relname FROM pg_class pgt WHERE SUBSTRING(pgt.relname FROM 10) = REPLACE(SUBSTRING(pg.relname FROM 10), '_index', '')) ELSE (SELECT pgc.relname FROM pg_class pgc WHERE pg.reltoastrelid = pgc.oid) END::varchar AS refrelname, CASE WHEN nspname = 'pg_toast' AND relkind = 'i' THEN (SELECT pgts.relname FROM pg_class pgts WHERE pgts.reltoastrelid = (SELECT pgt.oid FROM pg_class pgt WHERE SUBSTRING(pgt.relname FROM 10) = REPLACE(SUBSTRING(pg.relname FROM 10), '_index', ''))) END AS relidxrefrelname, relfilenode, relkind, reltuples::bigint, relpages FROM pg_class pg, pg_namespace pgn WHERE pg.relnamespace = pgn.oid AND pgn.nspname NOT IN ('information_schema', 'pg_catalog') ORDER BY relpages DESC;

# テーブルの特定のカラムの分布図を表示
select most_common_vals, most_common_freqs, histogram_bounds from pg_stats where tablename = 'table' and attname = 'column';

# テーブルの特定カラムのNULL値の割合を表示
select null_frac from pg_stats where tablename = 'table' and attname = 'column';

# テーブルの特定カラムの統計情報をいろいろ表示。割合やdistinctした時の数など。
select * from pg_stats where tablename = 'table' and attname = 'column';

# 設定パラメータの確認
SHOW <setting parameter>;

# 条件にマッチする設定パラメータを表示
select name, setting, unit, short_desc from pg_settings where name LIKE '%hoge%';

select <oid>::regclass; # oidをrelation名などに変換
